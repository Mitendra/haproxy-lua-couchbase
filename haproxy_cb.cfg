global
  nbthread 1
global
    log stdout  format raw  local0  debug

    lua-prepend-path "./?.lua"
    lua-load-per-thread haproxy_lua_couchbase.lua cb001.example.com 11207 sample-bucket false 127.0.0.1 8053 A
    # lua-load-per-thread haproxy_lua_couchbase.lua lor1-0000489.int.linkedin.com 11207 login-server-cache true 172.29.152.22 53 A
    lua-load-per-thread cb_server.lua
    # luasocket.ssl.verify none
    # luasocket.ssl.ca-file /etc/riddler/ca-bundle.crt 
    # luasocket.ssl.client-crt identity.cert
defaults
    log global
    timeout connect 10s
    timeout client 100s
    timeout server 100s
    mode http
    option httplog
    balance roundrobin
    http-reuse safe
    maxconn 6500

resolvers systemdns
    parse-resolv-conf

frontend stats
    bind *:8405
    stats enable
    stats uri /stats
    stats refresh 5s

frontend frontend_server
  bind *:4442# ssl crt ./cert.pem  ca-file ./ca-bundle.crt  ca-verify-file ./ca-bundle.crt  alpn h2,http/1.1
  http-request set-var(txn.cbkey) urlp(key)
  http-request lua.getCBKey 
  default_backend backend_server
 
frontend cb_server
  bind *:11207 #crt ~/identity.pem  ca-file ./ca-bundle.crt  ca-verify-file ./ca-bundle.crt
  mode tcp
  option tcplog
  tcp-request content use-service lua.cb_server

backend backend_server
  
  http-request return status 200 content-type "text/plain" lf-string "Hello from Default backend : %[var(txn.cbvalue)]\n" if !{ var(txn.cbvalue) -m len 0 }
  http-request return status 502 content-type "text/plain" lf-string "Hello from Default backend : %[var(txn.cbvalue)]\n" if { var(txn.cbvalue) -m len 0 }

